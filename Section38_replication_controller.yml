apiVersion: v1
kind: ReplicationController
metadata:
  name: alipne-box-replicationcontroller
spec:
  replicas: 3
  selector:
    app: alipne-box
  template:
    metadata:
      name: alpine
      labels:
        app: alipne-box
    spec:
      containers:
      - name: alpine-box
        image: alpine
        command: ["sleep", "3600"]


# Execute on Minikube(Single pods)
# Section 38 Lab Number 244


# steps
# 1) Go to directory where scripts are stored, cd <diretory_name>
# 2) Go to vi editor and name it using replication_controller.yaml
# 3) Copy the content from above and save the file.
#apiVersion: v1
#kind: ReplicationController
#metadata:
#  name: alipne-box-replicationcontroller
#spec:
#  replicas: 3
#  selector:
#    app: alipne-box
#  template:
#    metadata:
#      name: alpine
#      labels:
#        app: alipne-box
#    spec:
#      containers:
#      - name: alpine-box
#        image: alpine
#        command: ["sleep", "3600"]

# Manifest explanation

# kind is ReplicationController (is a object)
# it contain metadata and specification.
# specification has replica, selector, template(metadata) and container spec

# 4) Execute following commands to check pods running status
#    kubectl get pods -o wide --show-labels
# 5) Create a pod, kubectl apply -f <file-name.yml>
# 6) check replicationcontroller " kubectl get replicationcontroller/<name of the replica contoller>"
# kubectl get replicationcontroller/alipne-box-replicationcontroller

# or short cut
# kubectl get rc/alipne-box-replicationcontroller

# Note: we see replicationcontroller with desried, current and ready state.
# 7) Lets describe the replica controller.
# kubectl describe rc/alipne-box-replicationcontroller
# 8) Check if pod is created, "kubectl get pods -o wide --show-labels"
# 9) Lets delete the pod and see if replica is working.
# kubectl delete pod <pod-name>
# Note: We get message that pod is deleted.
# 10)check replicationcontroller " kubectl get replicationcontroller/<name of the replica contoller>"
# kubectl get replicationcontroller/alipne-box-replicationcontroller
# Note: we notice that replicacontroller desrired , current and ready state is same.
# 11) Check if pod, "kubectl get pods -o wide --show-labels"
# we notice that deleted pod is re-created again and we have same replicas
# 12) Suppose we need to scale application again horizontallly abobe 3 replicas
# execute following command
# kubectl scale --replicas=6 replicationcontroller/<define replicacontrollername>
# kubectl scale --replicas=6 replicationcontroller/alipne-box-replicationcontroller
# 13)check replicationcontroller " kubectl get replicationcontroller/<name of the replica contoller>"
# kubectl get replicationcontroller/alipne-box-replicationcontroller
# we notice that 6 replicas is created, 3 old and 3 new one.
# 14) Check if pod, "kubectl get pods -o wide --show-labels"
# we notice is 6 pods are running.
# 15) to de-scale the pod/application (Just reduce the number in command)
# kubectl scale --replicas=2 replicationcontroller/<define replicacontrollername>
# kubectl scale --replicas=2 replicationcontroller/alipne-box-replicationcontroller
# Note: we notice that latest created pods are terminating.
# 16)check replicationcontroller " kubectl get replicationcontroller/<name of the replica contoller>"
# kubectl get replicationcontroller/alipne-box-replicationcontroller
# we notice that 2 replicas are running.
# 17) Check if pod, "kubectl get pods -o wide --show-labels"
# we notice is 2 pods are running.
# 18) To delete the replicationcontroller
# kubectl delete -f <filename.yml>
# Note: same Yaml file which is used to create the pods.
# 19)Check if pod is deleted, "kubectl get pods -o wide --show-labels"






